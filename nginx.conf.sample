
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
error_log  /usr/local/etc/nginx/logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  256;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  /usr/local/etc/nginx/logs/access.log  main;
    access_log      /usr/local/etc/nginx/logs/access.log main;
    #error_log       /usr/local/etc/nginx/logs/error.log;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    gzip  on;
    gzip_disable "msie6";

    upstream foo-site {
        # fail_timeout=0 means we always retry an upstream even if it failed
        # to return a good HTTP response (in case the Unicorn master nukes a
        # single worker for timing out).

        #server http://127.0.0.1:6543 fail_timeout=0;
        server unix:///Users/michael/src/pyr/initpyr/foo_env/foo/app.sock fail_timeout=0;

    }

    server {

        # optional ssl configuration

        #listen 443 ssl;
        #ssl_certificate /path/to/ssl/pem_file;
        #ssl_certificate_key /path/to/ssl/certificate_key;

        # end of optional ssl configuration
        listen 80 default;
        server_name _;

        access_log  /Users/michael/src/pyr/initpyr/foo_env/foo/access.log;
        error_log   /Users/michael/src/pyr/initpyr/foo_env/foo/error.log;
 
        location /static/ {
            #alias   /Users/michael/src/pyr/initpyr/foo_env/foo/foo/static/;
            root                    /Users/michael/src/pyr/initpyr/foo_env/foo/foo/;
            expires                 30d;
            add_header              Cache-Control public;
            access_log              off;
        }

        location / {
            proxy_set_header        Host $http_host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;

            client_max_body_size    10m;
            client_body_buffer_size 128k;
            proxy_connect_timeout   60s;
            proxy_send_timeout      90s;
            proxy_read_timeout      90s;
            proxy_buffering         off;
            proxy_temp_file_write_size 64k;
            proxy_pass http://foo-site;
            proxy_redirect          off;
        }
    }
    ##server {
    ##    listen       8080;
    ##    server_name  localhost;

        #charset koi8-r;

        #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
        #          '$status $body_bytes_sent "$http_referer" '
        #          '"$http_user_agent" "$http_x_forwarded_for"';


        #access_log  logs/host.access.log  main;
        #access_log  /usr/local/etc/nginx/logs/access.log  main;
        #access_log  logs/access.log  combined;



    ##    location / {
    ##        root   html;
    ##        index  index.html index.htm;
    ##    }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
    ##    error_page   500 502 503 504  /50x.html;
    ##    location = /50x.html {
    ##        root   html;
    ##    }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}

        #include /usr/local/etc/nginx/sites-enabled/*;
    ##}


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
